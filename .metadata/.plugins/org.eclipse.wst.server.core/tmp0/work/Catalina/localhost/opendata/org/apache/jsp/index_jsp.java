/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.99
 * Generated at: 2025-04-18 07:48:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1744347980548L));
    _jspx_dependants.put("jar:file:/C:/08_spring-workspace/openDataProject/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- jQuery 라이브러리 -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h2>실시간 대기오염 정보</h2>\r\n");
      out.write("	\r\n");
      out.write("	지역 :\r\n");
      out.write("	<select id=\"location\">\r\n");
      out.write("		<option>서울</option>\r\n");
      out.write("		<option>부산</option>\r\n");
      out.write("		<option>대전</option>\r\n");
      out.write("	</select>\r\n");
      out.write("	<button id=\"btn1\">해당 지역 대기오염 정보</button>\r\n");
      out.write("	\r\n");
      out.write("	<table id=\"result1\" border=\"1\" align=\"center\">\r\n");
      out.write("		<thead>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>측정소명</th>\r\n");
      out.write("				<th>측정일시</th>\r\n");
      out.write("				<th>통합대기환경수치</th>\r\n");
      out.write("				<th>미세먼지농도</th>\r\n");
      out.write("				<th>일산화탄소농도</th>\r\n");
      out.write("				<th>이산화질소농도</th>\r\n");
      out.write("				<th>아황산가스농도</th>\r\n");
      out.write("				<th>오존농도</th>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</thead>\r\n");
      out.write("		<tbody></tbody>\r\n");
      out.write("	</table>\r\n");
      out.write("	\r\n");
      out.write("		<script>\r\n");
      out.write("		$(function(){\r\n");
      out.write("			$(\"#btn1\").click(function(){\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url:\"air.do\",\r\n");
      out.write("					data:{\r\n");
      out.write("						location:$(\"#location\").val()\r\n");
      out.write("					},\r\n");
      out.write("					success:function(data){\r\n");
      out.write("						// console.log(data)\r\n");
      out.write("						// jQuery에서의 find메소드 : 기준이 되는 요소의 하위 요소들 중 특정 요소를 찾을 때 사용\r\n");
      out.write("						// (html, xml 다 사용가능)\r\n");
      out.write("						// console.log(data.find(\"item\")) 불가\r\n");
      out.write("						// console.log($(data).find(\"item\")) // jQuery로 만들어야 한다.\r\n");
      out.write("						// 객체 배열을 준다.\r\n");
      out.write("						\r\n");
      out.write("						// xml형식의 응답데이터를 받았을 때\r\n");
      out.write("						// 1. 응답데이터 안에 실제 데이터가 담겨있는 요소 선택\r\n");
      out.write("						let itemArr = $(data).find(\"item\")\r\n");
      out.write("						\r\n");
      out.write("						// 2. 반복문을 통해 실제 담긴 데이터에 접근해서 동적으로 요소 만들기\r\n");
      out.write("						let value = \"\"\r\n");
      out.write("						itemArr.each(function(i, item){\r\n");
      out.write("						//	console.log(item.find(\"stationName\")); // Query화 시켜야 함\r\n");
      out.write("						//	console.log($(item).find(\"stationName\").text());\r\n");
      out.write("						\r\n");
      out.write("							value += \"<tr>\"\r\n");
      out.write("								  +		\"<td>\" + $(item).find(\"stationName\").text() + \"</td>\"\r\n");
      out.write("								  +		\"<td>\" + $(item).find(\"dataTime\").text() + \"</td>\"\r\n");
      out.write("								  +		\"<td>\" + $(item).find(\"khaiValue\").text() + \"</td>\"\r\n");
      out.write("								  +		\"<td>\" + $(item).find(\"pm10Value\").text() + \"</td>\"\r\n");
      out.write("								  +		\"<td>\" + $(item).find(\"coValue\").text() + \"</td>\"\r\n");
      out.write("								  +		\"<td>\" + $(item).find(\"no2Value\").text() + \"</td>\"\r\n");
      out.write("								  +		\"<td>\" + $(item).find(\"so2Value\").text() + \"</td>\"\r\n");
      out.write("								  +		\"<td>\" + $(item).find(\"o3Value\").text() + \"</td>\"\r\n");
      out.write("								  +	 \"</tr>\"\r\n");
      out.write("						\r\n");
      out.write("						})\r\n");
      out.write("						\r\n");
      out.write("						// 3. 동적으로 만들어낸 요소를 화면에 출력\r\n");
      out.write("						$(\"#result1 tbody\").html(value);\r\n");
      out.write("						\r\n");
      out.write("					},\r\n");
      out.write("					error:function(){\r\n");
      out.write("						console.log(\"ajax통신실패\")\r\n");
      out.write("					}\r\n");
      out.write("				})\r\n");
      out.write("			})\r\n");
      out.write("		})\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<!-- \r\n");
      out.write("	<script> json 형식의 응답데이터\r\n");
      out.write("		$(function(){\r\n");
      out.write("			$(\"#btn1\").click(function(){\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url:\"air.do\",\r\n");
      out.write("					data:{location:$(\"#location\").val()},\r\n");
      out.write("					success:function(data){\r\n");
      out.write("						// console.log(data.response.body.items)\r\n");
      out.write("						const itemArr = data.response.body.items;\r\n");
      out.write("						\r\n");
      out.write("						let value = \"\";\r\n");
      out.write("						for(let i in itemArr){\r\n");
      out.write("							let item = itemArr[i];\r\n");
      out.write("							\r\n");
      out.write("							value += \"<tr>\"\r\n");
      out.write("								   +   \"<td>\" + item.stationName + \"</td>\"\r\n");
      out.write("								   +   \"<td>\" + item.dataTime + \"</td>\"\r\n");
      out.write("								   +   \"<td>\" + item.khaiValue + \"</td>\"\r\n");
      out.write("								   +   \"<td>\" + item.pm10Value + \"</td>\"\r\n");
      out.write("								   +   \"<td>\" + item.coValue + \"</td>\"\r\n");
      out.write("								   +   \"<td>\" + item.no2Value + \"</td>\"\r\n");
      out.write("								   +   \"<td>\" + item.so2Value + \"</td>\"\r\n");
      out.write("								   +   \"<td>\" + item.o3Value + \"</td>\"\r\n");
      out.write("								   + \"</tr>\"\r\n");
      out.write("							\r\n");
      out.write("						}\r\n");
      out.write("						\r\n");
      out.write("						$(\"#result1 tbody\").html(value);\r\n");
      out.write("						\r\n");
      out.write("					},\r\n");
      out.write("					error:function(){\r\n");
      out.write("						console.log(\"대기오염 조회 실패\")\r\n");
      out.write("					}\r\n");
      out.write("				})\r\n");
      out.write("			})\r\n");
      out.write("		})\r\n");
      out.write("	</script>\r\n");
      out.write("	-->\r\n");
      out.write("	\r\n");
      out.write("	<h2>중앙선거관리위원회 코드정보 - 정당정보</h2>\r\n");
      out.write("	<input type=\"button\" value=\"조회하기\" id=\"btn2\">\r\n");
      out.write("	\r\n");
      out.write("	<div id=\"result2\"></div>\r\n");
      out.write("	<!-- \r\n");
      out.write("	<div id=\"result2\">\r\n");
      out.write("		<table id=\"table1\" border=\"1\" align=\"center\">\r\n");
      out.write("			<thead>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>선거아이디</th>\r\n");
      out.write("					<th>정당명</th>\r\n");
      out.write("					<th>순서</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</thead>\r\n");
      out.write("			<tbody></tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("	</div>\r\n");
      out.write("	 -->\r\n");
      out.write("		<script>\r\n");
      out.write("		$(function(){\r\n");
      out.write("			$(\"#btn2\").click(function(){\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url:\"jd.do\",\r\n");
      out.write("					success:function(data){\r\n");
      out.write("						\r\n");
      out.write("						let $table = $(\"<table border='1' align='center'></table>\");\r\n");
      out.write("						let $thead = $(\"<thead></thead>\");\r\n");
      out.write("						let headTr = \"<tr>\"\r\n");
      out.write("									+	\"<th>선거아이디</th>\"\r\n");
      out.write("									+	\"<th>정당명</th>\"\r\n");
      out.write("									+	\"<th>순서</th>\"\r\n");
      out.write("									+ \"</tr>\";\r\n");
      out.write("									\r\n");
      out.write("						$thead.html(headTr);\r\n");
      out.write("						\r\n");
      out.write("						let $tbody = $(\"<tbody></tbody>\");\r\n");
      out.write("						let bodyTr = \"\";\r\n");
      out.write("						\r\n");
      out.write("						$(data).find(\"item\").each(function(i, jd){\r\n");
      out.write("						\r\n");
      out.write("							bodyTr += \"<tr>\"\r\n");
      out.write("									+	\"<td>\" + $(jd).find(\"sgId\").text() + \"</td>\"\r\n");
      out.write("									+	\"<td>\" + $(jd).find(\"jdName\").text() + \"</td>\"\r\n");
      out.write("									+	\"<td>\" + $(jd).find(\"pOrder\").text() + \"</td>\"\r\n");
      out.write("									+ \"</tr>\"\r\n");
      out.write("						})\r\n");
      out.write("						\r\n");
      out.write("						$tbody.html(bodyTr);\r\n");
      out.write("						\r\n");
      out.write("						/*\r\n");
      out.write("						$table.append($thead, $tbody); // append는 붙이라는 의미\r\n");
      out.write("						$table.appendTo(\"#result2\"); // table을 붙여라\r\n");
      out.write("						*/\r\n");
      out.write("						$table.append($thead, $tbody)\r\n");
      out.write("							  .appendTo(\"#result2\");\r\n");
      out.write("						\r\n");
      out.write("						/*\r\n");
      out.write("							만일 위의 반복문을 돌리지 않고 아래와 같이 돌리면 안 됨\r\n");
      out.write("							$table.append($thead)\r\n");
      out.write("								  .append(data)\r\n");
      out.write("							** 응답데이터 xml형식을 곧바로 table안에 넣으면 문제 발생한다.\r\n");
      out.write("							=> 요소들을 바로 html화 시킬 수 없음.\r\n");
      out.write("							=> 반복문을 돌려가면서 table화 시켜야 함.\r\n");
      out.write("						*/\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("					},\r\n");
      out.write("					error:function(){\r\n");
      out.write("						console.log(\"정당조회실패\")\r\n");
      out.write("					}\r\n");
      out.write("\r\n");
      out.write("				})\r\n");
      out.write("			})	\r\n");
      out.write("		})\r\n");
      out.write("	</script>\r\n");
      out.write("	<!-- \r\n");
      out.write("	<script>\r\n");
      out.write("		$(function(){\r\n");
      out.write("			$(\"#btn2\").click(function(){\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url:\"jd.do\",\r\n");
      out.write("					success:function(data){\r\n");
      out.write("						const itemArr = data.response.body.items.item;\r\n");
      out.write("						\r\n");
      out.write("						let value = \"\";\r\n");
      out.write("						for(let i in itemArr){\r\n");
      out.write("							let item = itemArr[i];\r\n");
      out.write("							\r\n");
      out.write("							value += \"<tr>\"\r\n");
      out.write("								  +		\"<td>\" + item.sgId + \"</td>\"\r\n");
      out.write("								  +		\"<td>\" + item.jdName + \"</td>\"\r\n");
      out.write("								  +		\"<td>\" + item.pOrder + \"</td>\"\r\n");
      out.write("								  +  \"</tr>\"\r\n");
      out.write("\r\n");
      out.write("						}\r\n");
      out.write("						\r\n");
      out.write("						$(\"#table1 tbody\").html(value);\r\n");
      out.write("						\r\n");
      out.write("					},\r\n");
      out.write("					error:function(){\r\n");
      out.write("						console.log(\"코드조회실패\")\r\n");
      out.write("					}\r\n");
      out.write("				})\r\n");
      out.write("			})	\r\n");
      out.write("		})\r\n");
      out.write("	</script>\r\n");
      out.write("	 -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
