package com.kh.spring.member.controller;

import javax.servlet.ServletRequest;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.kh.spring.member.model.vo.Member;

@Controller // Controller 타입의 어노테이션을 붙여주면 bean 스캐닝을 통해 자동으로 bean 등록
public class MemberController {
	/*
	// RequestMapping 타입의 어노테이션을 붙여줌으로써 HanlerMapping 효과
	@RequestMapping(value="login.me")
	public void loginMember() {
		
		
	}
	
	@RequestMapping(value="insert.me")
	public void insertMember() {
		
		
	}
	
	public void updateMember() {
		
		
	}
	*/
	
	/*
	 * * 파라미터(요청시 전달값)를 받는 방법 (요청시 전달되는 값들 처리하는 방법)
	 * 
	 * 	1. HttpServletRequest를 이용해서 전달받기 (기존의 jsp/servlet 때 방식)
	 * 		해당 메소드의 매개변수로 HttpServletRequest를 작성해두면
	 * 		스프링 컨테이너가 해당 메소드 호출시(실행시) 자동으로 객체를 생성해서 인자로 주입해줌
	 */
	
	/*
	@RequestMapping("login.me")
	public String loginMember(HttpServletRequest request) {
		String userId = request.getParameter("id");
		String userPwd = request.getParameter("pwd");
		
		System.out.println("ID : " + userId);
		System.out.println("PWD : " + userPwd);
		
		return "main";
	}
	*/
	
	/*
	 * 2. @RequestParam 어노테이션을 이용하는 방버
	 * 		request.getparameter("키") : 밸류의 역할을 대신해주는 어노테이션
	 */

	/*
	@RequestMapping("login.me")
	public String loginMember( @RequestParam(value="id", defaultValue = "aaa") String userId, 
								@RequestParam(value="pwd") String userPwd) {
		System.out.println("ID : " + userId);
		System.out.println("PWD : " + userPwd);
		
		return "main";
	}
	*/
	
	/*
	 * 3. @RequestParam 어노테이션을 생략하는 방법
	 * 	*** 단, 매개변수명은 jsp의 name값과 동일하게 셋팅해줘야 자동으로 값이 주입된다.
	 */
	
	/*
	@RequestMapping("login.me")
	public String loginMember(String id, String pwd) {
		// 반드시 jsp의 name과 같은 값으로 넣어야 한다.
//		System.out.println("ID : " + id);
//		System.out.println("PWD : " + pwd);
		Member m = new Member();
		m.setUserId(id);
		m.setUserPwd(pwd);
		
		return "main";
	}
	*/
	
	/*
	 * 4. 커맨드 객체 방식
	 * 
	 */
	@RequestMapping("login.me")
	public String loginMember(Member m) {
		
		return "main";
	}
	
}
